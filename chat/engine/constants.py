# Mirrors items reused server-side from constants.js
from django.utils.translation import ugettext_lazy as _

CHAT_LOGIN_SUCCESS = 'CHAT_LOGIN_SUCCESS'
RECEIVE_ROOMS = 'RECEIVE_ROOMS'
RECEIVE_ROOMS_FAILURE = 'RECEIVE_ROOMS_FAILURE'

RECEIVE_MESSAGES = 'RECEIVE_MESSAGES'
RECEIVE_MESSAGES_FAILURE = 'RECEIVE_MESSAGES_FAILURE'

CREATE_CHAT_ROOM = 'CREATE_CHAT_ROOM'
CREATE_CHAT_ROOM_SUCCESS = 'CREATE_CHAT_ROOM_SUCCESS'
CREATE_CHAT_ROOM_FAILURE = 'CREATE_CHAT_ROOM_FAILURE'

CLOSE_CHAT_ROOM = 'CLOSE_CHAT_ROOM'
CLOSE_CHAT_ROOM_SUCCESS = 'CLOSE_CHAT_ROOM_SUCCESS'
CLOSE_CHAT_ROOM_FAILURE= 'CLOSE_CHAT_ROOM_FAILURE'

DELETE_CHAT_ROOM = 'DELETE_CHAT_ROOM'
DELETE_CHAT_ROOM_SUCCESS = 'DELETE_CHAT_ROOM_SUCCESS'
DELETE_CHAT_ROOM_FAILURE = 'DELETE_CHAT_ROOM_FAILURE'

BLOCK_USER = 'BLOCK_USER'
BLOCK_USER_SUCCESS = 'BLOCK_USER_SUCCESS'
BLOCK_USER_FAILURE = 'BLOCK_USER_FAILURE'

UNBLOCK_USER = 'UNBLOCK_USER'
UNBLOCK_USER_SUCCESS = 'UNBLOCK_USER_SUCCESS'
UNBLOCK_USER_FAILURE = 'UNBLOCK_USER_FAILURE'

SET_ROOM_CONTENT = 'SET_ROOM_CONTENT'

SET_ROOM_INACTIVE = 'SET_ROOM_INACTIVE'
SET_ROOM_INACTIVE_FAILURE = 'SET_ROOM_INACTIVE_FAILURE'

SET_ROOM_ACTIVE = 'SET_ROOM_ACTIVE'
SET_ROOM_ACTIVE_FAILURE = 'SET_ROOM_ACTIVE_FAILURE'

SET_ROOM_IS_TYPING = 'SET_ROOM_IS_TYPING'
SET_ROOM_IS_TYPING_FAILURE = 'SET_ROOM_IS_TYPING_FAILURE'

SET_ALL_ROOMS_INACTIVE_SUCCESS= 'SET_ALL_ROOMS_INACTIVE_SUCCESS'
SET_ALL_ROOMS_INACTIVE_FAILURE= 'SET_ALL_ROOMS_INACTIVE_FAILURE'

CREATE_MEET_MAP_ROOM_SUCCESS = 'CREATE_MEET_MAP_ROOM_SUCCESS'
CREATE_MEET_MAP_ROOM_FAILURE = 'CREATE_MEET_MAP_ROOM_FAILURE'

ACCEPT_JOIN_REQUEST_SUCCESS = 'ACCEPT_JOIN_REQUEST_SUCCESS'
ACCEPT_JOIN_REQUEST_FAILURE = 'ACCEPT_JOIN_REQUEST_FAILURE'

CANCEL_JOIN_REQUEST_SUCCESS = 'CANCEL_JOIN_REQUEST_SUCCESS'
CANCEL_JOIN_REQUEST_FAILURE = 'CANCEL_JOIN_REQUEST_FAILURE'

REJECT_JOIN_REQUEST_SUCCESS = 'REJECT_JOIN_REQUEST_SUCCESS'
REJECT_JOIN_REQUEST_FAILURE = 'REJECT_JOIN_REQUEST_FAILURE'

REQUEST_TO_JOIN_SUCCESS = 'REQUEST_TO_JOIN_SUCCESS'
REQUEST_TO_JOIN_FAILURE = 'REQUEST_TO_JOIN_FAILURE'

USER_MATCH_RECEIPT_SUCCESS = 'USER_MATCH_RECEIPT_SUCCESS'
USER_MATCH_RECEIPT_FAILURE = 'USER_MATCH_RECEIPT_FAILURE'

SEND_MESSAGE = 'SEND_MESSAGE'
SEND_MESSAGE_FAILURE = 'SEND_MESSAGE_FAILURE'


# String Constants
GROUP_SUMMON_TEXT = 'You''ve been summoned to a new group!'
INVITED_YOU = 'has invited you to join a new room!'
ROOM_DOES_NOT_EXIST = 'Error validating roomId. Object with that roomId does not exist!'
ERROR_VALIDATING_PARAMS = 'Error validating parameters.'
ROOM_ID_MISSING = '% roomId is not specified in data.' % ERROR_VALIDATING_PARAMS
REQUEST_RECEIVED = 'Request to join the room was successfully received by server.'
SEND_TO_USERS_INVALID = '% sendToUsers must be a list of user ids.' % ERROR_VALIDATING_PARAMS
SEND_TO_USERS_REQUIRED = '% sendToUsers is a required parameter.' % ERROR_VALIDATING_PARAMS

def get_text_with_param(*args, **kwargs):
    for arg in kwargs:
        print(arg)
    for a in args:
        print(a)